#!/bin/bash

function check_for_commits {
    OLD="$1"
    NEW="$2"
    NUM_COMMITS=$(git log --oneline --no-merges "origin/${OLD}" "^origin/${NEW}" | wc -l)
    if [[ "${NUM_COMMITS}" -eq 0 ]]; then
        echo "${OLD}: no new commits that need to be merged to ${NEW}"
    else
        echo "${OLD}: ${NUM_COMMITS} new commits that need to be merged to ${NEW}"
        git --no-pager log --pretty=format:'    %h %s' --no-merges "origin/${OLD}" "^origin/${NEW}"
        echo
    fi
    echo
}


BRANCHES=(
    1.9
    1.10
    integration
    resources-printfarm-3.2
    resources-develop-3.2
)

git fetch origin
echo

for I in $(seq 0 $((${#BRANCHES[*]} - 2))); do
    OLD="${BRANCHES[$I]}"
    NEW="${BRANCHES[$(($I+1))]}"
    check_for_commits "${OLD}" "${NEW}"
done

